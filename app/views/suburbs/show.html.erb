<script>
    function initMap(lat, lng, name) {
      // Styles for map rendering
      var styles = [
          {
            featureType: 'water',
            stylers: [
              { color: '#19a0d8' }
            ]
          },{
            featureType: 'administrative',
            elementType: 'labels.text.stroke',
            stylers: [
              { color: '#ffffff' },
              { weight: 6 }
            ]
          },{
            featureType: 'administrative',
            elementType: 'labels.text.fill',
            stylers: [
              { color: '#e85113' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'geometry.stroke',
            stylers: [
              { color: '#efe9e4' },
              { lightness: -40 }
            ]
          },{
            featureType: 'transit.station',
            stylers: [
              { weight: 9 },
              { hue: '#e85113' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'labels.icon',
            stylers: [
              { visibility: 'off' }
            ]
          },{
            featureType: 'water',
            elementType: 'labels.text.stroke',
            stylers: [
              { lightness: 100 }
            ]
          },{
            featureType: 'water',
            elementType: 'labels.text.fill',
            stylers: [
              { lightness: -100 }
            ]
          },{
            featureType: 'poi',
            elementType: 'geometry',
            stylers: [
              { visibility: 'on' },
              { color: '#f0e4d3' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'geometry.fill',
            stylers: [
              { color: '#efe9e4' },
              { lightness: -25 }
            ]
          }
      ];
      var myCoords = new google.maps.LatLng(lat, lng);
      var mapOptions = {
      center: myCoords,
      zoom: 15,
      styles: styles
      };
      // This function takes in a COLOR, and then creates a new marker
      // icon of that color. The icon will be 21 px wide by 34 high, have an origin
      // of 0, 0 and be anchored at 10, 34).
      function makeMarkerIcon(markerColor) {
        var markerImage = new google.maps.MarkerImage(
          'http://chart.googleapis.com/chart?chst=d_map_spin&chld=1.15|0|'+ markerColor +
          '|40|_|%E2%80%A2',
          new google.maps.Size(21, 34),
          new google.maps.Point(0, 0),
          new google.maps.Point(10, 34),
          new google.maps.Size(21,34));
        return markerImage;
      }

      function populateInfoWindow(marker, infowindow) {
        // Check to make sure the infowindow is not already opened on this marker.
        if (infowindow.marker != marker) {
          // Clear the infowindow content to give the streetview time to load.
          infowindow.setContent('');
          infowindow.marker = marker;
          // Make sure the marker property is cleared if the infowindow is closed.
          infowindow.addListener('closeclick', function() {
            infowindow.marker = null;
          });
          var streetViewService = new google.maps.StreetViewService();
          var radius = 50;
          // In case the status is OK, which means the pano was found, compute the
          // position of the streetview image, then calculate the heading, then get a
          // panorama from that and set the options
          function getStreetView(data, status) {
            if (status == google.maps.StreetViewStatus.OK) {
              var nearStreetViewLocation = data.location.latLng;
              var heading = google.maps.geometry.spherical.computeHeading(
                nearStreetViewLocation, marker.position);
                infowindow.setContent('<div>' + marker.title + '</div><div id="pano"></div>');
                var panoramaOptions = {
                  position: nearStreetViewLocation,
                  pov: {
                    heading: heading,
                    pitch: 30
                  }
                };
              var panorama = new google.maps.StreetViewPanorama(
                document.getElementById('pano'), panoramaOptions);
            } else {
              infowindow.setContent('<div>' + marker.title + '</div>' +
                '<div>No Street View Found</div>');
            }
          }
          // Use streetview service to get the closest streetview image within
          // 50 meters of the markers position
          streetViewService.getPanoramaByLocation(marker.position, radius, getStreetView);
          // Open the infowindow on the correct marker.
          infowindow.open(map, marker);
        }
      }

      var map = new google.maps.Map(document.getElementById('map'), mapOptions);

      // Style the markers a bit. This will be our listing marker icon.
      var defaultIcon = makeMarkerIcon('0091ff');

      // Create a "highlighted location" marker color for when the user
      // mouses over the marker.
      var highlightedIcon = makeMarkerIcon('FFFF24');

      var largeInfowindow = new google.maps.InfoWindow();

      var marker = new google.maps.Marker({
          position: myCoords,
          map: map,
          icon: defaultIcon,
          title: 'First Marker'
      });




      // Create an onclick event to open the large infowindow at each marker.
      marker.addListener('click', function() {
        populateInfoWindow(this, largeInfowindow);
      });
      // Two event listeners - one for mouseover, one for mouseout,
      // to change the colors back and forth.
      marker.addListener('mouseover', function() {
        this.setIcon(highlightedIcon);
      });
      marker.addListener('mouseout', function() {
        this.setIcon(defaultIcon);
      });

      // This function will loop through the listings and hide them all.
      function hideMarkers(markers) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null);
        }
      }

      // Create a searchbox in order to execute a places search
       var searchBox = new google.maps.places.SearchBox(
       document.getElementById('places-search'));

       // Bias the searchbox to within the bounds of the map.
      searchBox.setBounds(map.getBounds());

      // Listen for the event fired when the user selects a prediction from the
      // picklist and retrieve more details for that place.
      searchBox.addListener('places_changed', function() {
        searchBoxPlaces(this);
      });

      // This function fires when the user selects a searchbox picklist item.
      // It will do a nearby search using the selected query string or place.
      function searchBoxPlaces(searchBox) {
        hideMarkers(placeMarkers);
        var places = searchBox.getPlaces();
        // For each place, get the icon, name and location.
        createMarkersForPlaces(places);
        if (places.length == 0) {
          window.alert('We did not find any places matching that search!');
        }
      }

      // This function firest when the user select "go" on the places search.
      // It will do a nearby search using the entered query string or place.
      function textSearchPlaces() {
        var bounds = map.getBounds();
        hideMarkers(placeMarkers);
        var placesService = new google.maps.places.PlacesService(map);
        placesService.textSearch({
          query: document.getElementById('places-search').value,
          bounds: bounds
        }, function(results, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            createMarkersForPlaces(results);
          }
        });
      }

      // This function creates markers for each place found in either places search.
      function createMarkersForPlaces(places) {
        var bounds = new google.maps.LatLngBounds();
        for (var i = 0; i < places.length; i++) {
          var place = places[i];
          var icon = {
            url: place.icon,
            size: new google.maps.Size(35, 35),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(15, 34),
            scaledSize: new google.maps.Size(25, 25)
          };
          // Create a marker for each place.
          var marker = new google.maps.Marker({
            map: map,
            icon: icon,
            title: place.name,
            position: place.geometry.location,
            id: place.id
          });
          // If a marker is clicked, do a place details search on it in the next function.
          marker.addListener('click', function() {
          getPlacesDetails(this, place);
          });
          placeMarkers.push(marker);
          if (place.geometry.viewport) {
            // Only geocodes have viewport.
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        }
        map.fitBounds(bounds);
      }

    // This is the PLACE DETAILS search - it's the most detailed so it's only
    // executed when a marker is selected, indicating the user wants more
    // details about that place.
    function getPlacesDetails(marker, infowindow) {
      console.log(marker);
      var service = new google.maps.places.PlacesService(map);
      service.getDetails({
        placeId: marker.id
      }, function(place, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          // Set the marker property on this infowindow so it isn't created again.
          infowindow.marker = marker;
          var innerHTML = '<div>';
          if (place.name) {
            innerHTML += '<strong>' + place.name + '</strong>';
          }
          if (place.formatted_address) {
            innerHTML += '<br>' + place.formatted_address;
          }
          if (place.formatted_phone_number) {
            innerHTML += '<br>' + place.formatted_phone_number;
          }
          if (place.opening_hours) {
            innerHTML += '<br><br><strong>Hours:</strong><br>' +
                place.opening_hours.weekday_text[0] + '<br>' +
                place.opening_hours.weekday_text[1] + '<br>' +
                place.opening_hours.weekday_text[2] + '<br>' +
                place.opening_hours.weekday_text[3] + '<br>' +
                place.opening_hours.weekday_text[4] + '<br>' +
                place.opening_hours.weekday_text[5] + '<br>' +
                place.opening_hours.weekday_text[6];
          }
          if (place.photos) {
            innerHTML += '<br><br><img src="' + place.photos[0].getUrl(
                {maxHeight: 100, maxWidth: 200}) + '">';
          }
          innerHTML += '</div>';
          infowindow.setContent(innerHTML);
          infowindow.open(map, marker);
          // Make sure the marker property is cleared if the infowindow is closed.
          infowindow.addListener('closeclick', function() {
            infowindow.marker = null;
          });
        }
      });
    }//end getDetails



      // Listen for the event fired when the user selects a prediction and clicks
      // "go" more details for that place.
      document.getElementById('go-places').addEventListener('click', textSearchPlaces);


  }//end init function

    // Create placemarkers array to use in multiple functions to have control
    // over the number of places that show.
    var placeMarkers = [];
    document.addEventListener("DOMContentLoaded", function(){
        initMap(<%=@suburb.lat%>, <%=@suburb.long%>)
    });
</script>

<h1>Suburbs#show</h1>
<p>Find me in app/views/suburbs/show.html.erb</p>

<!-- Carousel -->

<div class="show_carousel">
  <div class="carousel">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner">
      <div class="carousel-item active">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
      <div class="carousel-item">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
      <div class="carousel-item">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
    </div>
  </div>
</div>

<!-- Secondary Nav Section -->
<div class="show_secondary_nav">
  <ul class="nav nav-pills nav-fill">
    <li class="nav-item">
      <a class="nav-link active" href="#">Summary</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Lifestyle</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Cost of Living</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Cost of Living</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Renting in <%= @suburb.name %></a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Entertainment</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Transport</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Amenities</a>
    </li>
  </ul>
</div>

<!-- Suburb Description -->

<div class="show_description">
  <h2><%= @suburb.name %></h2>
  <p><%= @suburb.description %></p>
</div>


<!-- Gallery -->

<div class="show_gallery">
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image one">
  </div>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image two">
  </div>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image three">
  </div>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image four">
  </div>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image five">
  </div>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image six">
  </div>
</div>

<!-- Lifestyle text/image block -->

<div class="show_lifestyle">
  <h2>Lifestyle</h2>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image six">
  </div>
</div>

<!-- Cost of living block -->

<div class="living_cost">
  <div>
    <h2>Cost of living</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi, architecto, voluptas rem quos at voluptatibus ducimus nemo quae dolorem veritatis non, accusantium porro dolore! Facere placeat quam, iure reiciendis dolorem.</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi, architecto, voluptas rem quos at voluptatibus ducimus nemo quae dolorem veritatis non, accusantium porro dolore! Facere placeat quam, iure reiciendis dolorem.</p>
  </div>
  <div>
    <h3>Family of four</h3>
    <p>[$1,400] per week</p>
    <h3>Couple</h3>
    <p>[$1,300] per week</p>
    <h3>Single Young Professional</h3>
    <p>[$1,000] per week</p>
  </div>
</div>

<!-- Renting in suburb block -->
<div class="show_renting">
  <div>
    <h2>Renting in <%= @suburb.name %></h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi?</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi?</p>
  </div>
  <div>
    <h3>Average Rent Rates</h3>
    <p>Apartment: $650 per week</p>
    <p>Town house: $1,000 per week</p>
    <p>Suburban house: $1,500 per week</p>
  </div>
  <div>
    <p>[Apartment icon]</p>
    <p>300 available</p>
    <p>[Town house icon]</p>
    <p>22 available</p>
    <p>[Suburban house icon]</p>
    <p>20 available</p>
  </div>
</div>

<!-- Entertainment text/image block -->

<div class="show_entertainment">
  <h2>Entertainment</h2>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  <div class="card" style="width: 18rem;">
    <img src="<%= @suburb.image_url %>" class="card-img-top" alt="<%= @suburb.name %> gallery image six">
  </div>
</div>

<!-- Transport in suburb -->
<div class="show_transport">
  <div>
    <h2>Transport in <%= @suburb.name %></h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi?</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi?</p>
  </div>
  <div>
    <h3>Trains</h3>
    <p>[Trains icon]</p>
    <p>T1, T4</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni ut, obcaecati totam id dolorem cum incidunt porro, dolore accusamus autem neque natus consequuntur! Eius, reprehenderit, doloribus. Autem, fugiat, fugit. Facilis.</p>
    <h3>Buses</h3>
    <p>[Bus icon]</p>
    <p>333, 387, 389</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni ut, obcaecati totam id dolorem cum incidunt porro, dolore accusamus autem neque natus consequuntur! Eius, reprehenderit, doloribus. Autem, fugiat, fugit. Facilis.</p>
  </div>
</div>

<!-- Amenities Map -->

<div class="show_amenities">
  <div>
    <h2>Amenities</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tenetur perferendis dolor consequuntur nemo dolores temporibus, sed neque at corrupti ducimus quisquam natus quaerat sunt, rem debitis ad architecto nulla officia.</p>
    <h3>Filter Map</h3>
    <ul>
      <li>Train station</li>
      <li>Bus route</li>
      <li>Park</li>
      <li>Beach</li>
      <li>Shopping area</li>
      <li>School</li>
      <li>Medical facility</li>
      <li>University</li>
    </ul>
  </div>
  <div>
    <h6>latitude: <%= @suburb.lat%>   longitude: <%= @suburb.long%></h6>
    <div>
          <span class="text">Search for nearby places</span>
          <input id="places-search" type="text" placeholder="Ex: Pizza delivery">
          <input id="go-places" type="button" value="Go">
    </div>
    <hr>
    <div id="map"></div>

  </div>

</div>
