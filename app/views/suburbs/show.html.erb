<script>
  console.log("working")

  $(document).ready(function () {

    const fetchInfo = function () {
      $.getJSON('/api/info').done(function (info) {
        $('#brother').text( info.brother );
        $('#time').text( info.time );
        $('#uptime').text( info.uptime );
        $('#lucky').text( info.lucky_number );
        $('#fortune').text( info.fortune_cookie );
      });
    };

    fetchInfo();
    setInterval(fetchInfo, 2000);

    import requests
    import json

    client_id = 'client_9a16f1e97850483da3425de17364a2bc'
    client_secret = 'secret_bdd75693c424db12846f1ed5ef737434'
    scopes = ['api_properties_read']
    auth_url = 'https://auth.domain.com.au/v1/connect/token'
    url_endpoint = 'https://api.domain.com.au/v1/properties/'
    property_id = 'RF-8884-AK'

    def get_property_info():
        response = requests.post(auth_url, data = {
                            'client_id':client_id,
                            'client_secret':client_secret,
                            'grant_type':'client_credentials',
                            'scope':scopes,
                            'Content-Type':'text/json'
                            })
        json_res = response.json()
        access_token=json_res['access_token']
        (access_token)
        auth = {'Authorization':'Bearer ' + access_token}
        url = url_endpoint + property_id
        res1 = requests.get(url, headers=auth)
        r = res1.json()
        print(r)

    get_property_info()

</script>

<script>

def show
  @suburb = Suburb.find params[:id]

  require 'httparty'

  @response =
    HTTParty.get("http://rubygems.org/api/v1/versions/httparty.json")
  @domain =
    HTTParty.get("https://auth.domain.com.au/v1/connect/authorize?client_id=client_9a16f1e97850483da3425de17364a2bc&redirect_uri=http://locosfinder.herokuapp.com&response_type=token&scope=openid%20profile%20email%20api_listings_read%20api_agencies_read&nonce={nonce}")

    )

    @getDomainToken = HTTParty.post('https://auth.domain.com.au/v1/connect/token', data, {
        headers: {
            'Authorization': `Basic ${base64(`client_9a16f1e97850483da3425de17364a2bc`:`secret_bdd75693c424db12846f1ed5ef737434`)}`,
            'Content-Type': 'application/x-www-form-urlencoded',
        }

</script>

<script>
    function initMap(lat, lng, name) {
      // Styles for map rendering
      var styles = [
          {
            featureType: 'water',
            stylers: [
              { color: '#19a0d8' }
            ]
          },{
            featureType: 'administrative',
            elementType: 'labels.text.stroke',
            stylers: [
              { color: '#ffffff' },
              { weight: 6 }
            ]
          },{
            featureType: 'administrative',
            elementType: 'labels.text.fill',
            stylers: [
              { color: '#e85113' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'geometry.stroke',
            stylers: [
              { color: '#efe9e4' },
              { lightness: -40 }
            ]
          },{
            featureType: 'transit.station',
            stylers: [
              { weight: 9 },
              { hue: '#e85113' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'labels.icon',
            stylers: [
              { visibility: 'off' }
            ]
          },{
            featureType: 'water',
            elementType: 'labels.text.stroke',
            stylers: [
              { lightness: 100 }
            ]
          },{
            featureType: 'water',
            elementType: 'labels.text.fill',
            stylers: [
              { lightness: -100 }
            ]
          },{
            featureType: 'poi',
            elementType: 'geometry',
            stylers: [
              { visibility: 'on' },
              { color: '#f0e4d3' }
            ]
          },{
            featureType: 'road.highway',
            elementType: 'geometry.fill',
            stylers: [
              { color: '#efe9e4' },
              { lightness: -25 }
            ]
          }
      ];
      var myCoords = new google.maps.LatLng(lat, lng);
      var mapOptions = {
      center: myCoords,
      zoom: 15,
      styles: styles
      };
      // This function takes in a COLOR, and then creates a new marker
      // icon of that color. The icon will be 21 px wide by 34 high, have an origin
      // of 0, 0 and be anchored at 10, 34).
      function makeMarkerIcon(markerColor) {
        var markerImage = new google.maps.MarkerImage(
          'http://chart.googleapis.com/chart?chst=d_map_spin&chld=1.15|0|'+ markerColor +
          '|40|_|%E2%80%A2',
          new google.maps.Size(21, 34),
          new google.maps.Point(0, 0),
          new google.maps.Point(10, 34),
          new google.maps.Size(21,34));
        return markerImage;
      }

      function populateInfoWindow(marker, infowindow) {
        // Check to make sure the infowindow is not already opened on this marker.
        if (infowindow.marker != marker) {
          // Clear the infowindow content to give the streetview time to load.
          infowindow.setContent('');
          infowindow.marker = marker;
          // Make sure the marker property is cleared if the infowindow is closed.
          infowindow.addListener('closeclick', function() {
            infowindow.marker = null;
          });
          var streetViewService = new google.maps.StreetViewService();
          var radius = 50;
          // In case the status is OK, which means the pano was found, compute the
          // position of the streetview image, then calculate the heading, then get a
          // panorama from that and set the options
          function getStreetView(data, status) {
            if (status == google.maps.StreetViewStatus.OK) {
              var nearStreetViewLocation = data.location.latLng;
              var heading = google.maps.geometry.spherical.computeHeading(
                nearStreetViewLocation, marker.position);
                infowindow.setContent('<div>' + marker.title + '</div><div id="pano"></div>');
                var panoramaOptions = {
                  position: nearStreetViewLocation,
                  pov: {
                    heading: heading,
                    pitch: 30
                  }
                };
              var panorama = new google.maps.StreetViewPanorama(
                document.getElementById('pano'), panoramaOptions);
            } else {
              infowindow.setContent('<div>' + marker.title + '</div>' +
                '<div>No Street View Found</div>');
            }
          }
          // Use streetview service to get the closest streetview image within
          // 50 meters of the markers position
          streetViewService.getPanoramaByLocation(marker.position, radius, getStreetView);
          // Open the infowindow on the correct marker.
          infowindow.open(map, marker);
        }
      }

      var map = new google.maps.Map(document.getElementById('map'), mapOptions);

      // Style the markers a bit. This will be our listing marker icon.
      var defaultIcon = makeMarkerIcon('0091ff');

      // Create a "highlighted location" marker color for when the user
      // mouses over the marker.
      var highlightedIcon = makeMarkerIcon('FFFF24');

      var largeInfowindow = new google.maps.InfoWindow();

      var marker = new google.maps.Marker({
          position: myCoords,
          map: map,
          icon: defaultIcon,
          title: 'First Marker'
      });




      // Create an onclick event to open the large infowindow at each marker.
      marker.addListener('click', function() {
        populateInfoWindow(this, largeInfowindow);
      });
      // Two event listeners - one for mouseover, one for mouseout,
      // to change the colors back and forth.
      marker.addListener('mouseover', function() {
        this.setIcon(highlightedIcon);
      });
      marker.addListener('mouseout', function() {
        this.setIcon(defaultIcon);
      });

      // This function will loop through the listings and hide them all.
      function hideMarkers(markers) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null);
        }
      }

      // Create a searchbox in order to execute a places search
       var searchBox = new google.maps.places.SearchBox(
       document.getElementById('places-search'));

       // Bias the searchbox to within the bounds of the map.
      searchBox.setBounds(map.getBounds());

      // Listen for the event fired when the user selects a prediction from the
      // picklist and retrieve more details for that place.
      searchBox.addListener('places_changed', function() {
        searchBoxPlaces(this);
      });

      // This function fires when the user selects a searchbox picklist item.
      // It will do a nearby search using the selected query string or place.
      function searchBoxPlaces(searchBox) {
        hideMarkers(placeMarkers);
        var places = searchBox.getPlaces();
        // For each place, get the icon, name and location.
        createMarkersForPlaces(places);
        if (places.length == 0) {
          window.alert('We did not find any places matching that search!');
        }
      }

      // This function firest when the user select "go" on the places search.
      // It will do a nearby search using the entered query string or place.
      function textSearchPlaces() {
        var bounds = map.getBounds();
        hideMarkers(placeMarkers);
        var placesService = new google.maps.places.PlacesService(map);
        placesService.textSearch({
          query: document.getElementById('places-search').value,
          bounds: bounds
        }, function(results, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            createMarkersForPlaces(results);
          }
        });
      }

      // This function creates markers for each place found in either places search.
      function createMarkersForPlaces(places) {
        var bounds = new google.maps.LatLngBounds();
        for (var i = 0; i < places.length; i++) {
          var place = places[i];
          var icon = {
            url: place.icon,
            size: new google.maps.Size(35, 35),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(15, 34),
            scaledSize: new google.maps.Size(25, 25)
          };
          // Create a marker for each place.
          var marker = new google.maps.Marker({
            map: map,
            icon: icon,
            title: place.name,
            position: place.geometry.location,
            id: place.id
          });
          // If a marker is clicked, do a place details search on it in the next function.
          marker.addListener('click', function() {
          getPlacesDetails(this, place);
          });
          placeMarkers.push(marker);
          if (place.geometry.viewport) {
            // Only geocodes have viewport.
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        }
        map.fitBounds(bounds);
      }

    // This is the PLACE DETAILS search - it's the most detailed so it's only
    // executed when a marker is selected, indicating the user wants more
    // details about that place.
    function getPlacesDetails(marker, infowindow) {
      console.log(marker);
      var service = new google.maps.places.PlacesService(map);
      service.getDetails({
        placeId: marker.id
      }, function(place, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          // Set the marker property on this infowindow so it isn't created again.
          infowindow.marker = marker;
          var innerHTML = '<div>';
          if (place.name) {
            innerHTML += '<strong>' + place.name + '</strong>';
          }
          if (place.formatted_address) {
            innerHTML += '<br>' + place.formatted_address;
          }
          if (place.formatted_phone_number) {
            innerHTML += '<br>' + place.formatted_phone_number;
          }
          if (place.opening_hours) {
            innerHTML += '<br><br><strong>Hours:</strong><br>' +
                place.opening_hours.weekday_text[0] + '<br>' +
                place.opening_hours.weekday_text[1] + '<br>' +
                place.opening_hours.weekday_text[2] + '<br>' +
                place.opening_hours.weekday_text[3] + '<br>' +
                place.opening_hours.weekday_text[4] + '<br>' +
                place.opening_hours.weekday_text[5] + '<br>' +
                place.opening_hours.weekday_text[6];
          }
          if (place.photos) {
            innerHTML += '<br><br><img src="' + place.photos[0].getUrl(
                {maxHeight: 100, maxWidth: 200}) + '">';
          }
          innerHTML += '</div>';
          infowindow.setContent(innerHTML);
          infowindow.open(map, marker);
          // Make sure the marker property is cleared if the infowindow is closed.
          infowindow.addListener('closeclick', function() {
            infowindow.marker = null;
          });
        }
      });
    }//end getDetails



      // Listen for the event fired when the user selects a prediction and clicks
      // "go" more details for that place.
      document.getElementById('go-places').addEventListener('click', textSearchPlaces);


  }//end init function

    // Create placemarkers array to use in multiple functions to have control
    // over the number of places that show.
    var placeMarkers = [];
    document.addEventListener("DOMContentLoaded", function(){
        initMap(<%=@suburb.lat%>, <%=@suburb.long%>)
    });
</script>


<!-- NavBar -->
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <img src="/docs/4.3/assets/brand/bootstrap-solid.svg" width="30" height="30" class="d-inline-block align-top" alt="">
  <a class="navbar-brand" href="/">Locus</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarNav">
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" href="/">Home<span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="<%= suburbs_path %>">Suburbs</a>
      </li>
    </ul>
  </div>
</nav>
<!-- NavBar END -->

<!-- Header -->
<h1 class="text_align suburbs_head_h">Living in <%= @suburb.name %></h1>
<p class="text_align suburbs_head_p">Find me in app/views/suburbs/show.html.erb</p>
<!-- Header END -->

<!-- Carousel -->
<div class="show_carousel">
  <div class="carousel">
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner">
      <div class="carousel-item active">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
      <div class="carousel-item">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
      <div class="carousel-item">
        <img src="<%= @suburb.image_url %>" class="d-block w-100" alt="...">
      </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
    </div>
  </div>
</div>
<!-- Carousel END -->

<!-- Secondary Nav -->
<div class="show_secondary_nav sticky-top features_navbar">
  <ul class="nav nav-pills nav-fill">
    <li class="nav-item">
      <a class="font-weight-light" href="<%= suburbs_path %>">Go Back |</a>
    </li>
    <li class="nav-item">
      <a href="#summary">Summary</a>
      <!-- class="active_underline"  -->
    </li>
    <li class="nav-item">
      <a href="#lifestyle">Lifestyle</a>
    </li>
    <li class="nav-item">
      <a href="#living_cost">Cost of Living</a>
    </li>
    <li class="nav-item">
      <a href="#renting">Renting in <%= @suburb.name %></a>
    </li>
    <li class="nav-item">
      <a href="#entertainment">Entertainment</a>
    </li>
    <li class="nav-item">
      <a href="#transport">Transport</a>
    </li>
    <li class="nav-item">
      <a href="#amenities">Amenities</a>
    </li>
  </ul>
<div><a id="summary"></div>
</div>
<!-- Secondary Nav END -->

<!-- Summary block -->
<div class="show_summary">
  <!-- Suburb Description -->
  <div class="suburb_description">
    <h2><%= @suburb.name %></h2>
    <p><%= @suburb.description %></p>
  </div>

  <!-- Gallery -->
  <div class="suburb_gallery">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image one">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image two">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image three">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image four">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image five">
      <img src="<%= @suburb.image_url %>" class="" style="width: 18rem;" alt="<%= @suburb.name %> gallery image six">
  </div>
<div><a id="<%=  %>lifestyle"></div>
</div>

<!-- Summary block END -->

<!-- Lifestyle text/image block -->
<div class="show_lifestyle">
  <div class="lifestyle_description">
    <h2>Lifestyle</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  </div>
  <div class="lifestyle_image">
    <img src="<%= @suburb.image_url %>" class="" style="width: 35rem;" alt="<%= @suburb.name %> lifestyle image">
  </div>
<div><a id="<%=  %>living_cost"></div>
</div>
<!-- Lifestyle block END -->

<!-- Cost of living block -->
<div class="show_living_cost">
  <div class="living_cost_description">
    <h2>Cost of living</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi, architecto, voluptas rem quos at voluptatibus ducimus nemo quae dolorem veritatis non, accusantium porro dolore! Facere placeat quam, iure reiciendis dolorem.</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi, architecto, voluptas rem quos at voluptatibus ducimus nemo quae dolorem veritatis non, accusantium porro dolore! Facere placeat quam, iure reiciendis dolorem.</p>
  </div>
  <div class="living_cost_breakdown">
    <h3>Family of four</h3>
      <p>[$1,400] per week</p>
    <h3>Couple</h3>
      <p>[$1,300] per week</p>
    <h3>Single Young Professional</h3>
      <p>[$1,000] per week</p>
  </div>
<div><a id="<%=  %>renting"></div>
</div>

<!-- Cost of living block END -->

<!-- Renting in suburb block -->
<div class="show_renting">
  <div class="renting_description">
    <h2>Renting in <%= @suburb.name %></h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi.</p>

    <h3>Average Rent Rates</h3>
    <p>Apartment: $650 per week</p>
    <p>Town house: $1,000 per week</p>
    <p>Suburban house: $1,500 per week</p>
  </div>
  <div class="renting_stats">
    <div class="renting_stats_apartments">
      <div class="stats_icon">
        <p>[Apartment icon]</p>
      </div>
      <div class="stats_texts">
        <p class="text-uppercase font-weight-light">Apartments</p>
        <p><b>300 available</b></p>
      </div>
    </div>

    <div class="renting_stats_townhouses">
      <div class="stats_icon">
        <p>[Town house icon]</p>
      </div>
      <div class="stats_texts">
        <p class="text-uppercase font-weight-light">Town houses</p>
        <p><b>22 available</b></p>
      </div>
    </div>

    <div class="renting_stats_suburban">
      <div class="stats_icon">
        <p>[Town house icon]</p>
      </div>
      <div class="stats_texts">
        <p class="text-uppercase font-weight-light">Suburban houses</p>
        <p><b>20 available</b></p>
      </div>
    </div>

  </div>
<div><a id="<%=  %>entertainment"></div>
</div>
<!-- Renting in suburb block END -->

<!-- Entertainment text/image block -->
<div class="show_entertainment">
  <div class="entertainment_description">
    <h2>Entertainment</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque eveniet, dolores soluta! Beatae quod asperiores quo sequi quam, vero voluptatem deserunt. Officiis repudiandae velit, ea numquam beatae! Aut, eum, eos.</p>
  </div>
  <div class="entertainment_image">
    <img src="<%= @suburb.image_url %>" class="" style="width: 35rem;" alt="<%= @suburb.name %> entertainment image">
  </div>
<div><a id="transport"></div>
</div>
<!-- Entertainment text/image block END -->

<!-- Transport in suburb block -->
<div class="show_transport">
  <div class="transport_description" >
    <h2>Transport in <%= @suburb.name %></h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi.</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum aut numquam cumque voluptas! Ab quod suscipit distinctio odio asperiores praesentium facere numquam, accusamus corrupti, id quasi, labore quos animi nisi.</p>
  </div>
  <div class="transport_stats">
    <div class="transport_stats_trains">
      <div class="stats_icon">
        <p>[Trains icon]</p>
      </div>
      <div class="stats_texts_transport">
        <p class="text-uppercase font-weight-light">Trains</p>
        <p><b>T1, T4</b></p>
        <p class="text-justify">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
      </div>
    </div>

    <div class="transport_stats_buses">
      <div class="stats_icon">
        <p>[Bus icon]</p>
      </div>
      <div class="stats_texts_transport">
        <p class="text-uppercase font-weight-light">Buses</p>
        <p><b>333, 387, 389</b></p>
        <p class="text-justify">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
      </div>
    </div>
  </div>
<div><a id="amenities"></div>
</div>
<!-- Transport in suburb block END -->

<!-- Amenities w/ Map block -->
<div class="show_amenities">
  <div class="amenities_description">
    <h2>Amenities</h2>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tenetur perferendis dolor consequuntur nemo dolores temporibus, sed neque at corrupti ducimus quisquam natus quaerat sunt, rem debitis ad architecto nulla officia.</p>
    <h3>Filter Map</h3>
    <ul>
      <li>Train station</li>
      <li>Bus route</li>
      <li>Park</li>
      <li>Beach</li>
      <li>Shopping area</li>
      <li>School</li>
      <li>Medical facility</li>
      <li>University</li>
    </ul>
  </div>

  <div class="amenities_mapping">
    <h6>latitude: <%= @suburb.lat%>   longitude: <%= @suburb.long%></h6>
    <div class="map_interface">
          <span class="text">Search for nearby places</span>
          <input id="places-search" type="text" placeholder="Ex: Trains">
          <input id="go-places" type="button" value="Go">
    </div>
    <div id="map"></div>
  </div>
</div>
